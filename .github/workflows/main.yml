name: 构建项目
on:
  push:
    branches:
      - 'release/*'  # 只有推送到符合 'release/*' 模式的分支时才会触发

jobs:
  build:
    runs-on: ubuntu-latest  # 运行环境为最新的 Ubuntu 虚拟环境

    steps:
    - name: 检出代码
      uses: actions/checkout@v2  # 使用 GitHub 提供的用于检出代码的 Action
      with:
        submodules: true  # 初始化和更新所有的 Git 子模块

    - name: 运行构建脚本
      run: |
        chmod +x ./build.sh  # 使构建脚本具有执行权限
        ./build.sh  # 执行构建脚本

    - name: 创建 GitHub 发布
      id: create_release
      uses: actions/create-release@v1  # 使用 GitHub 提供的用于创建 GitHub 发布的 Action
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub Actions 提供的 token，无需自己创建
      with:
        tag_name: ${{ github.ref_name }}  # 发布的标签名，这里是当前的 Git 引用的子字符串，例如 "1.0.0"
        release_name: Release ${{ github.ref_name }}  # 发布的名称
        draft: false  # 是否为草稿，这里设置为否
        prerelease: false  # 是否为预发布，这里设置为否

    - name: 构建并推送 NuGet 包
      run: |
        dotnet pack --configuration Release --output nupkgs  # 打包项目
        dotnet nuget push nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json  # 推送包到 NuGe
